#################################
######### mysql 建表字段选择 ######
######### 官网:https://dev.mysql.com/doc/refman/5.6/en/data-type-overview.html ###
Q1:varchar与char的区别以及选择
  char的长度是不可以变的，而varchar的长度是可变的，也即是说，定义一个char[10]和varchar[10]，如果存进去的是'abcd'，
  那么char所占的长度仍然是10，除了abcd四个字符外，后面会添加空格，而varchar就立马将长度变为4了。取数据时char类型要
  用trim()去掉多余的空格，而varcahr是不需要的，尽管如此，char的存储速度还是要比varchar要快的多，因为其长度固定，方
  便程序的存储和查找；单是char也为此付出的是空间的代价，因为其长度固定，所以难免会有多余的空格占位符占据空间，可谓是一
  空间换取时间效率。然后对于两者的存储方式，char对英文字符（ASCII）占用一个字节，对一个汉子占用两个字节；而varchar的
  存储方式是，对每个英文字符占用两个字节，汉子也占用2个字节，两者的存储数据都非unicode的字符数据。像身份证号，银行卡号，
  这种长度不变的字符串类型个人觉得可以选择char进行存储更好

Q2:如何选择合适的数据类型
  当一个列可以选择多种数据类型时，应该优先考虑数字类型，其次是日期或二进制类型，最后是字符类型。对于相同级别的数据类型，
  应该优先选择占用空间小的数据类型

Q3:如何选择正确的整数类型
   类型             大小           范围                                         范围                        用途
   TINYINT         1字节          (-128，127)                                  (0，255)                    小整数值，如年龄
   SMALLINT        2字节          (-32768，32 767)                             (0，65535)                  大整数值
   MEDIUMINT       3字节          (-8388608，8388607)                          (0，16777 215)              大整数值
   INT             4字节          (-2147483648，2147483647)                    (0，4294967295)             大整数值
   BIGINT          8字节          (-9233372036854775808，9223372036854775807)  (0，18446744073709551615)   极大整数值

Q4:如何选择正确的实数类型
   类型        存储空间                         是否精确
   FLOAT      4字节                              否
   DOUBLE     8字节                              否
   DECIMAL    每4个字节存9个数字，小数点占一个字节   否

Q5:补充Q1
  ● VARCHAR和CHAR类型长度是以字符为单位的而不是字节，如UTF-8编码，每个字符占3个字节，那么CHAR(10)就需要占30个字节
  ● VARCHAR类型的存储特点
      ○ VARCHAR用于存储变长字符串，只占用必要的存储空间。
      ○ 当列的最大长度小于255时，只占用一个额外字节用于记录字符串长度。
      ○ 当列的最大长度大于255，则需要占用两个额外字节用于记录字符串长度。
  ● VARCHAR长度选择问题
      ○ 使用最小的符合需求的长度。
      ○ 系统上线后尽量不要修改VARCHAR的长度，因为在mysql 5.7之前，只要一修改就会发生锁表。
      ○ VARCHAR(5)和VARCHAR(200)存储'AAAAA'这一个字符串时都是使用一个额外的字节来记录字符串的长度，那么他们的性能有什么不同呢？
          ■ VARCHAR(5)优于VARCHAR(200)
          ■ 因为MySQL为了能够更有效的优化查询，对于VARCHAR字段使用的是其最大的宽度来分配内存，所以如果我们把宽度定的太长就会消耗更多的内存。
  ● VARCHAR类型的适用场景
      ○ 字符串列的最大长度比平均长度大很多
      ○ 字符串列很少被更新
      ○ 使用了多字节字符集存储字符串（如utf8中的中文和英文）
  #
  ● CHAR类型的存储特点
      ○ CHAR类型是定长的
      ○ 字符串存储在CHAR类型的列中会删除末尾的空格（VARCHAR则不会）
      ○ CHAR类型的最大宽度是255个字符，所以如果当我们长度超过255时，则需要使用VARCHAR类型进行存储
  ● CHAR类型的适用场景
      ○ 存储长度近似的值（md5值，如密码，身份证号，银行卡号）
      ○ 存储短字符串
      ○ 存储经常被更新的字符串列